{"mappings":"I,E,E,E,E,E,E,C,E,E,C,E,O,E,C,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,G,iB,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,E,Q,C,E,E,SCEA,SAAS,gBAAgB,CAAC,mBAAoB,KAC5C,IAAM,EAAQ,SAAS,cAAc,CAAC,aAChC,EAAc,SAAS,aAAa,CAAC,oBACvC,EAAe,CAAC,EAEd,EAAY,KACZ,IACF,EAAM,SAAS,CAAC,MAAM,CAAC,aACvB,SAAS,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAG,SAE/B,AADiB,SAAS,aAAa,CAAC,aAC/B,gBAAgB,CAAC,QAAS,GACnC,SAAS,gBAAgB,CAAC,UAAW,GAEzC,EAEM,EAAa,KACb,IACF,EAAM,SAAS,CAAC,GAAG,CAAC,aACpB,SAAS,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAG,GAE/B,AADiB,SAAS,aAAa,CAAC,aAC/B,mBAAmB,CAAC,QAAS,GACtC,SAAS,mBAAmB,CAAC,UAAW,GAE5C,EAEM,EAAqB,AAAA,IACP,WAAd,EAAM,GAAG,EACX,GAEJ,EAEM,EAAoB,AAAA,IAEnB,AADgB,SAAS,aAAa,CAAC,UAC1B,QAAQ,CAAC,EAAM,MAAM,GACrC,GAEJ,EAEM,EAAc,SAAS,aAAa,CAAC,uBACvC,GACF,CAAA,EAAY,OAAO,CAAG,CADxB,EAIA,EAAY,gBAAgB,CAAC,QAAS,MAAM,IAC1C,GAAI,AAAsB,QAAtB,EAAG,MAAM,CAAC,OAAO,CAAY,CAC/B,IAAM,EAAS,EAAG,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CACnC,EAAW,MAAM,AAAA,CAAA,EAAA,EAAA,WAAU,AAAV,EAAY,GAE/B,IACF,EAAe,EACf,EAAmB,GACnB,IAEJ,CACF,GAEA,IAAM,EAAqB,AAAA,IACzB,SAAS,cAAc,CACrB,eACA,GAAG,CAAG,CAAC,mCAAmC,EAAE,EAAS,WAAW,CAAC,CAAC,CACpE,SAAS,cAAc,CAAC,eAAe,SAAS,CAAG,EAAS,cAAc,CAE1E,SAAS,cAAc,CAAC,cAAc,SAAS,CAC7C,EAAS,YAAY,CAAC,OAAO,CAAC,GAChC,SAAS,cAAc,CAAC,wBAAwB,SAAS,CACvD,EAAS,UAAU,CACrB,SAAS,cAAc,CAAC,mBAAmB,SAAS,CAAG,KAAK,KAAK,CAC/D,EAAS,UAAU,EAErB,SAAS,cAAc,CAAC,uBAAuB,SAAS,CACtD,EAAS,cAAc,CACzB,SAAS,cAAc,CAAC,cAAc,SAAS,CAAG,EAAS,MAAM,CAC9D,GAAG,CAAC,AAAA,GAAK,EAAE,IAAI,EACf,IAAI,CAAC,MAER,SAAS,cAAc,CACrB,oBACA,SAAS,CAAG,CAAC,iBAAiB,EAAE,EAAS,QAAQ,CAAC,IAAI,CAAC,AAC3D,EAgBM,EAAgB,SAAS,aAAa,CAC1C,sCAEI,EAAc,SAAS,aAAa,CACxC,sCAGE,GACF,CAAA,EAAc,OAAO,CAtBF,KACnB,aAAa,OAAO,CAClB,CAAC,QAAQ,EAAE,EAAa,EAAE,CAAC,CAAC,CAC5B,KAAK,SAAS,CAAC,GAEnB,CAgBA,EAII,GACF,CAAA,EAAY,OAAO,CAnBF,KACjB,aAAa,OAAO,CAClB,CAAC,MAAM,EAAE,EAAa,EAAE,CAAC,CAAC,CAC1B,KAAK,SAAS,CAAC,GAEnB,CAaA,CAGF","sources":["<anon>","src/js/modal.js"],"sourcesContent":["(function () {\n\n      var $parcel$global =\n        typeof globalThis !== 'undefined'\n          ? globalThis\n          : typeof self !== 'undefined'\n          ? self\n          : typeof window !== 'undefined'\n          ? window\n          : typeof global !== 'undefined'\n          ? global\n          : {};\n  \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequired7c6\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequired7c6\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\n\nvar $fJh0j = parcelRequire(\"fJh0j\");\ndocument.addEventListener(\"DOMContentLoaded\", ()=>{\n    const modal = document.getElementById(\"filmModal\");\n    const galleryList = document.querySelector(\"ul.gallery-cards\");\n    let currentMovie = {};\n    const openModal = ()=>{\n        if (modal) {\n            modal.classList.remove(\"is-hidden\");\n            document.body.style.overflow = \"hidden\"; // Disable background scroll\n            const backdrop = document.querySelector(\".backdrop\");\n            backdrop.addEventListener(\"click\", closeModalOutside);\n            document.addEventListener(\"keydown\", closeModalOnEscKey);\n        }\n    };\n    const closeModal = ()=>{\n        if (modal) {\n            modal.classList.add(\"is-hidden\");\n            document.body.style.overflow = \"\"; // Re-enable background scroll\n            const backdrop = document.querySelector(\".backdrop\");\n            backdrop.removeEventListener(\"click\", closeModalOutside);\n            document.removeEventListener(\"keydown\", closeModalOnEscKey);\n        }\n    };\n    const closeModalOnEscKey = (event)=>{\n        if (event.key === \"Escape\") closeModal();\n    };\n    const closeModalOutside = (event)=>{\n        const modalContent = document.querySelector(\".modal\");\n        if (!modalContent.contains(event.target)) closeModal();\n    };\n    const closeButton = document.querySelector(\".modal-close-button\");\n    if (closeButton) closeButton.onclick = closeModal;\n    galleryList.addEventListener(\"click\", async (ev)=>{\n        if (ev.target.tagName === \"IMG\") {\n            const filmId = ev.target.id.split(\"-\")[1];\n            const filmInfo = await (0, $fJh0j.getFilmData)(filmId);\n            if (filmInfo) {\n                currentMovie = filmInfo;\n                updateModalContent(filmInfo);\n                openModal();\n            }\n        }\n    });\n    const updateModalContent = (filmData)=>{\n        document.getElementById(\"cover-image\").src = `https://image.tmdb.org/t/p/original${filmData.poster_path}`;\n        document.getElementById(\"movie-title\").innerText = filmData.original_title;\n        document.getElementById(\"film-votes\").innerText = filmData.vote_average.toFixed(1);\n        document.getElementById(\"film-votes-secondary\").innerText = filmData.vote_count;\n        document.getElementById(\"film-popularity\").innerText = Math.round(filmData.popularity);\n        document.getElementById(\"film-original-title\").innerText = filmData.original_title;\n        document.getElementById(\"film-genre\").innerText = filmData.genres.map((g)=>g.name).join(\", \");\n        document.getElementById(\"film-description\").innerHTML = `<h3>ABOUT</h3><p>${filmData.overview}</p>`;\n    };\n    const addToWatched = ()=>{\n        localStorage.setItem(`watched.${currentMovie.id}`, JSON.stringify(currentMovie));\n    };\n    const addToQueue = ()=>{\n        localStorage.setItem(`queue.${currentMovie.id}`, JSON.stringify(currentMovie));\n    };\n    const watchedButton = document.querySelector(\".modal-buttons button:nth-child(1)\");\n    const queueButton = document.querySelector(\".modal-buttons button:nth-child(2)\");\n    if (watchedButton) watchedButton.onclick = addToWatched;\n    if (queueButton) queueButton.onclick = addToQueue;\n});\nasync function $40873ecf3c18e122$export$fb073058993321eb(results, page, totalPages) {\n    const galleryElement = document.querySelector(\".gallery-cards\");\n    galleryElement.innerHTML = \"\";\n    for (const result of results){\n        const { id: id, poster_path: poster_path, original_title: original_title, genre_ids: genre_ids, release_date: release_date } = result;\n        const getReleaseYear = release_date.split(\"-\")[0];\n        const genres = await makeGenresString(genre_ids);\n        const filmCard = `\n        <li class=\"film-card\" id=\"film-card-${id}\">\n          <div class=\"film-cover\">\n            <img class=\"film-img\" id=\"film-${id}\" src=\"https://image.tmdb.org/t/p/original${poster_path}\" alt=\"${original_title}\">\n          </div>\n          <div class=\"film-desc\">\n            <p class=\"card-film-title\">${original_title}</p>\n            <p class=\"film-info\">${genres} | ${getReleaseYear}</p>\n          </div>\n        </li>`;\n        galleryElement.insertAdjacentHTML(\"beforeend\", filmCard);\n    }\n    createPagination(page, totalPages, \"popularMovies\");\n}\n\n})();\n//# sourceMappingURL=index.b7a2c5e0.js.map\n","import { getFilmData } from './common';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const modal = document.getElementById('filmModal');\n  const galleryList = document.querySelector('ul.gallery-cards');\n  let currentMovie = {};\n\n  const openModal = () => {\n    if (modal) {\n      modal.classList.remove('is-hidden');\n      document.body.style.overflow = 'hidden'; // Disable background scroll\n      const backdrop = document.querySelector('.backdrop');\n      backdrop.addEventListener('click', closeModalOutside);\n      document.addEventListener('keydown', closeModalOnEscKey);\n    }\n  };\n\n  const closeModal = () => {\n    if (modal) {\n      modal.classList.add('is-hidden');\n      document.body.style.overflow = ''; // Re-enable background scroll\n      const backdrop = document.querySelector('.backdrop');\n      backdrop.removeEventListener('click', closeModalOutside);\n      document.removeEventListener('keydown', closeModalOnEscKey);\n    }\n  };\n\n  const closeModalOnEscKey = event => {\n    if (event.key === 'Escape') {\n      closeModal();\n    }\n  };\n\n  const closeModalOutside = event => {\n    const modalContent = document.querySelector('.modal');\n    if (!modalContent.contains(event.target)) {\n      closeModal();\n    }\n  };\n\n  const closeButton = document.querySelector('.modal-close-button');\n  if (closeButton) {\n    closeButton.onclick = closeModal;\n  }\n\n  galleryList.addEventListener('click', async ev => {\n    if (ev.target.tagName === 'IMG') {\n      const filmId = ev.target.id.split('-')[1];\n      const filmInfo = await getFilmData(filmId);\n\n      if (filmInfo) {\n        currentMovie = filmInfo;\n        updateModalContent(filmInfo);\n        openModal();\n      }\n    }\n  });\n\n  const updateModalContent = filmData => {\n    document.getElementById(\n      'cover-image'\n    ).src = `https://image.tmdb.org/t/p/original${filmData.poster_path}`;\n    document.getElementById('movie-title').innerText = filmData.original_title;\n\n    document.getElementById('film-votes').innerText =\n      filmData.vote_average.toFixed(1);\n    document.getElementById('film-votes-secondary').innerText =\n      filmData.vote_count;\n    document.getElementById('film-popularity').innerText = Math.round(\n      filmData.popularity\n    );\n    document.getElementById('film-original-title').innerText =\n      filmData.original_title;\n    document.getElementById('film-genre').innerText = filmData.genres\n      .map(g => g.name)\n      .join(', ');\n\n    document.getElementById(\n      'film-description'\n    ).innerHTML = `<h3>ABOUT</h3><p>${filmData.overview}</p>`;\n  };\n\n  const addToWatched = () => {\n    localStorage.setItem(\n      `watched.${currentMovie.id}`,\n      JSON.stringify(currentMovie)\n    );\n  };\n\n  const addToQueue = () => {\n    localStorage.setItem(\n      `queue.${currentMovie.id}`,\n      JSON.stringify(currentMovie)\n    );\n  };\n\n  const watchedButton = document.querySelector(\n    '.modal-buttons button:nth-child(1)'\n  );\n  const queueButton = document.querySelector(\n    '.modal-buttons button:nth-child(2)'\n  );\n\n  if (watchedButton) {\n    watchedButton.onclick = addToWatched;\n  }\n\n  if (queueButton) {\n    queueButton.onclick = addToQueue;\n  }\n});\n\nexport async function drawMovies(results, page, totalPages) {\n  const galleryElement = document.querySelector('.gallery-cards');\n  galleryElement.innerHTML = '';\n\n  for (const result of results) {\n    const { id, poster_path, original_title, genre_ids, release_date } = result;\n\n    const getReleaseYear = release_date.split('-')[0];\n    const genres = await makeGenresString(genre_ids);\n    const filmCard = `\n        <li class=\"film-card\" id=\"film-card-${id}\">\n          <div class=\"film-cover\">\n            <img class=\"film-img\" id=\"film-${id}\" src=\"https://image.tmdb.org/t/p/original${poster_path}\" alt=\"${original_title}\">\n          </div>\n          <div class=\"film-desc\">\n            <p class=\"card-film-title\">${original_title}</p>\n            <p class=\"film-info\">${genres} | ${getReleaseYear}</p>\n          </div>\n        </li>`;\n    galleryElement.insertAdjacentHTML('beforeend', filmCard);\n  }\n\n  createPagination(page, totalPages, 'popularMovies');\n}\n"],"names":["$parcel$global","$parcel$modules","$parcel$inits","parcelRequire","$fJh0j","globalThis","self","window","global","id","exports","init","module","call","err","Error","code","register","document","addEventListener","modal","getElementById","galleryList","querySelector","currentMovie","openModal","classList","remove","body","style","overflow","backdrop","closeModalOutside","closeModalOnEscKey","closeModal","add","removeEventListener","event","key","modalContent","contains","target","closeButton","onclick","ev","tagName","filmId","split","filmInfo","getFilmData","updateModalContent","filmData","src","poster_path","innerText","original_title","vote_average","toFixed","vote_count","Math","round","popularity","genres","map","g","name","join","innerHTML","overview","watchedButton","queueButton","localStorage","setItem","JSON","stringify"],"version":3,"file":"index.b7a2c5e0.js.map"}