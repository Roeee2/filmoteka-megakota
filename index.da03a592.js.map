{"mappings":"A,I,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,E,Q,C,I,E,E,S,E,E,SCIA,MAAM,EAAa,SAAS,aAAa,CAAC,wBACpC,EAAU,SAAS,aAAa,CAAC,kBAEvC,EAAW,gBAAgB,CAAC,SAAU,AAAA,IACtC,EAAM,cAAc,GAEpB,IAAM,EAAQ,AADK,SAAS,aAAa,CAAC,yBACjB,KAAK,CAC9B,GAAI,CAAC,EAAO,CACV,A,C,AAAA,G,AAAA,E,U,C,AAAA,E,O,CAAA,C,EAAS,MAAM,CAAC,IAAI,CAAC,8BACrB,MACF,CACA,QAAQ,GAAG,CAAC,GACZ,EAAQ,SAAS,CAAG,GAEpB,AAAA,CAAA,EAAA,EAAA,WAAU,AAAV,EAAY,GACX,IAAI,CAAC,MAAO,IAEb,IAAK,IAAM,KADK,EAAS,OAAO,CACF,CAC5B,GAAM,CAAA,GAAE,CAAE,CAAA,YAAE,CAAW,CAAA,eAAE,CAAc,CAAA,UAAE,CAAS,CAAA,aAAE,CAAY,CAAE,CAAG,EAC/D,EAAiB,EACjB,EAAa,KAAK,CAAC,IAAI,CAAC,EAAE,CAC1B,UACA,EAAS,MAAM,AAAA,CAAA,EAAA,EAAA,gBAAe,AAAf,EAAiB,GAChC,EAAW,CAAC;4CACwB,EAAE,EAAG;;2CAEN,EAAE,EAAG;oDACI,EAAE,EAAY;iBACjD,EAAE,EAAe;;;uCAGK,EAAE,EAAe;iCACvB,EAAE,EAAO,GAAG,EAAE,EAAe;;aAEjD,CAAC,CACN,EAAQ,kBAAkB,CAAC,YAAa,EAChD,CACA,EACA","sources":["<anon>","src/js/searching-movies-home.js"],"sourcesContent":["\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\n      var $parcel$global =\n        typeof globalThis !== 'undefined'\n          ? globalThis\n          : typeof self !== 'undefined'\n          ? self\n          : typeof window !== 'undefined'\n          ? window\n          : typeof global !== 'undefined'\n          ? global\n          : {};\n  \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequired7c6\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequired7c6\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\n\nvar $7EEHk = parcelRequire(\"7EEHk\");\n\nvar $1GAPJ = parcelRequire(\"1GAPJ\");\nconst $696c9e8c5267895e$var$searchForm = document.querySelector(\".movie-searcher-form\");\nconst $696c9e8c5267895e$var$gallery = document.querySelector(\".gallery-cards\");\n$696c9e8c5267895e$var$searchForm.addEventListener(\"submit\", (event)=>{\n    event.preventDefault();\n    const queryInput = document.querySelector(\".movie-searcher-input\");\n    const query = queryInput.value;\n    if (!query) {\n        (0, (/*@__PURE__*/$parcel$interopDefault($1GAPJ))).Notify.info(\"Please enter a movie name.\");\n        return;\n    }\n    console.log(query);\n    $696c9e8c5267895e$var$gallery.innerHTML = \"\";\n    // page = 1;\n    (0, $7EEHk.searchMovie)(query).then(async (response)=>{\n        const results = response.results;\n        for (const result of results){\n            const { id: id, poster_path: poster_path, original_title: original_title, genre_ids: genre_ids, release_date: release_date } = result;\n            const getReleaseYear = release_date ? release_date.split(\"-\")[0] : \"Unknown\";\n            const genres = await (0, $7EEHk.makeGenresString)(genre_ids);\n            const filmCard = `\n        <li class=\"film-card\" id=\"film-card-${id}\">\n          <div class=\"film-cover\">\n            <img class=\"film-img\" id=\"film-${id}\" \n            src=\"https://image.tmdb.org/t/p/original${poster_path}\" \n            alt=\"${original_title}\">\n          </div>\n          <div class=\"film-desc\">\n            <p class=\"card-film-title\">${original_title}</p>\n            <p class=\"film-info\">${genres} | ${getReleaseYear}</p>\n          </div>\n        </li>`;\n            $696c9e8c5267895e$var$gallery.insertAdjacentHTML(\"beforeend\", filmCard);\n        }\n    });\n});\n\n\n//# sourceMappingURL=index.da03a592.js.map\n","import { makeGenresString } from \"./common\";\nimport { searchMovie } from \"./common\";\nimport Notiflix from \"notiflix\";\n\nconst searchForm = document.querySelector('.movie-searcher-form');\nconst gallery = document.querySelector('.gallery-cards');\n\nsearchForm.addEventListener('submit', event => {\nevent.preventDefault();\nconst queryInput = document.querySelector('.movie-searcher-input')\nconst query = queryInput.value;\nif (!query) {\n  Notiflix.Notify.info('Please enter a movie name.');\n  return;\n}\nconsole.log(query)\ngallery.innerHTML = '';\n// page = 1;\nsearchMovie(query)\n.then(async (response) => {\nconst results = response.results;\nfor (const result of results) {\n  const { id, poster_path, original_title, genre_ids, release_date } = result;\n  const getReleaseYear = release_date\n      ? release_date.split('-')[0]\n      : 'Unknown';\n  const genres = await makeGenresString(genre_ids);\n  const filmCard = `\n        <li class=\"film-card\" id=\"film-card-${id}\">\n          <div class=\"film-cover\">\n            <img class=\"film-img\" id=\"film-${id}\" \n            src=\"https://image.tmdb.org/t/p/original${poster_path}\" \n            alt=\"${original_title}\">\n          </div>\n          <div class=\"film-desc\">\n            <p class=\"card-film-title\">${original_title}</p>\n            <p class=\"film-info\">${genres} | ${getReleaseYear}</p>\n          </div>\n        </li>`;\n        gallery.insertAdjacentHTML('beforeend', filmCard);\n}\n})\n})"],"names":["$parcel$global","globalThis","self","window","global","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$7EEHk","$1GAPJ","$696c9e8c5267895e$var$searchForm","document","querySelector","$696c9e8c5267895e$var$gallery","addEventListener","event","preventDefault","query","queryInput","value","a","__esModule","default","Notify","info","console","log","innerHTML","searchMovie","then","response","result","results","poster_path","original_title","genre_ids","release_date","getReleaseYear","split","genres","makeGenresString","filmCard","insertAdjacentHTML"],"version":3,"file":"index.da03a592.js.map"}