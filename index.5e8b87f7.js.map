{"mappings":"ACAA,SAAS,gBAAgB,CAAC,mBAAoB,KAE5C,IAAM,EAAY,SAAS,aAAa,CAAC,kCAGnC,EAAS,SAAS,aAAa,CAAC,YAChC,EAAY,SAAS,aAAa,CAAC,gBAGrC,EAAa,CAAA,EAGjB,EAAU,gBAAgB,CAAC,QAAS,AAAA,IAElC,EAAM,cAAc,GAGpB,QAAQ,GAAG,CAAC,6BAA8B,GAGtC,GAEF,EAAU,WAAW,CAAG,SACxB,EAAO,KAAK,CAAC,OAAO,CAAG,QACvB,EAAU,KAAK,CAAC,OAAO,CAAG,SAG1B,EAAU,WAAW,CAAG,UACxB,EAAO,KAAK,CAAC,OAAO,CAAG,OACvB,EAAU,KAAK,CAAC,OAAO,CAAG,SAO5B,QAAQ,GAAG,CAAC,4BAHZ,EAAa,CAAC,EAIhB,EACF","sources":["<anon>","src/js/header-swap.js"],"sourcesContent":["var $1b5bc203dc4b9614$exports = {};\ndocument.addEventListener(\"DOMContentLoaded\", ()=>{\n    // Select the \"LOG IN\" link. The last child in the .header-menu-list which is the \"LOG IN\" link\n    const loginLink = document.querySelector(\".header-menu-list:nth-child(1)\");\n    // Select the headers by their classes\n    const headBg = document.querySelector(\".head-bg\");\n    const headLibBg = document.querySelector(\".head-lib-bg\");\n    // Initial state to track whether the user is logged in\n    let isLoggedIn = false;\n    // Add an event listener to the \"LOG IN\" link\n    loginLink.addEventListener(\"click\", (event)=>{\n        // Prevent the default action of the link\n        event.preventDefault();\n        // Log the state before the click to debug\n        console.log(\"Before Click - isLoggedIn:\", isLoggedIn);\n        // Toggle the state and update the text and visibility of headers accordingly\n        if (isLoggedIn) {\n            // User is currently logged in, log them out\n            loginLink.textContent = \"LOG IN\";\n            headBg.style.display = \"block\";\n            headLibBg.style.display = \"none\";\n        } else {\n            // User is currently logged out, log them in\n            loginLink.textContent = \"LOG OUT\";\n            headBg.style.display = \"none\";\n            headLibBg.style.display = \"block\";\n        }\n        // Toggle the logged-in state\n        isLoggedIn = !isLoggedIn;\n        // Log the state after the click to debug\n        console.log(\"After Click - isLoggedIn:\", isLoggedIn);\n    });\n});\n\n\n//# sourceMappingURL=index.5e8b87f7.js.map\n","document.addEventListener('DOMContentLoaded', () => {\n  // Select the \"LOG IN\" link. The last child in the .header-menu-list which is the \"LOG IN\" link\n  const loginLink = document.querySelector('.header-menu-list:nth-child(1)');\n\n  // Select the headers by their classes\n  const headBg = document.querySelector('.head-bg');\n  const headLibBg = document.querySelector('.head-lib-bg');\n\n  // Initial state to track whether the user is logged in\n  let isLoggedIn = false;\n\n  // Add an event listener to the \"LOG IN\" link\n  loginLink.addEventListener('click', event => {\n    // Prevent the default action of the link\n    event.preventDefault();\n\n    // Log the state before the click to debug\n    console.log('Before Click - isLoggedIn:', isLoggedIn);\n\n    // Toggle the state and update the text and visibility of headers accordingly\n    if (isLoggedIn) {\n      // User is currently logged in, log them out\n      loginLink.textContent = 'LOG IN';\n      headBg.style.display = 'block';\n      headLibBg.style.display = 'none';\n    } else {\n      // User is currently logged out, log them in\n      loginLink.textContent = 'LOG OUT';\n      headBg.style.display = 'none';\n      headLibBg.style.display = 'block';\n    }\n\n    // Toggle the logged-in state\n    isLoggedIn = !isLoggedIn;\n\n    // Log the state after the click to debug\n    console.log('After Click - isLoggedIn:', isLoggedIn);\n  });\n});\n"],"names":["document","addEventListener","loginLink","querySelector","headBg","headLibBg","isLoggedIn","event","preventDefault","console","log","textContent","style","display"],"version":3,"file":"index.5e8b87f7.js.map"}